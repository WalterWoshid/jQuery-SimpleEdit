$.fn.simpleedit=function(...a){const b=$.extend({},$.fn.simpleedit.defaults,...a);return this.each(function(){$(this).trigger("simpleedit.remove");let c=!1;const d=b;for(let b in a)if(b=a[b],"function"==typeof b)d.callbacks.push(b);else if("string"==typeof b&&b.includes("/"))d.url=b;else if("string"==typeof b){const a=findMethod(b);a?d[a]=b:(c=!0,console.error(`SimpleEdit: Could not find an option for '${b}'`))}return c?void console.error("Available options are: (Pick one from the arrays)",b.availableOptions):void new SimpleEdit(this,d)}),this},$.fn.simpleedit.defaults={availableOptions:{mode:["inline"],onblur:["cancel","submit","ignore"],type:["text"]},ajaxOptions:{type:"POST"},buttons:{submit:`<button class="submit"><span>&#10004;</span></button>`,abort:`<button class="abort"><span>&#10006;</span></button>`,spinner:`<button class="loader"><span class="simpleedit-spinner">&#11211;</span></button>`},callbacks:[],error:null,mode:"inline",onblur:"cancel",success:null,type:"text"};class SimpleEdit{constructor(a,b={}){this.element=a;const c=$.fn.simpleedit.defaults;this.ajaxOptions=b.ajaxOptions||c.ajaxOptions,this.callbacks=b.callbacks||c.callbacks,this.error=b.error||c.error,this.mode=b.mode||c.mode,this.onblur=b.onblur||c.onblur,this.success=b.success||c.success,this.type=b.type||c.type,this.name=b.name,this.pk=b.pk,this.url=b.url,this.submitButton=b.submitButton||c.buttons.submit,this.abortButton=b.abortButton||c.buttons.abort,this.spinnerButton=b.spinnerButton||c.buttons.spinner,this.init(),this.initEvents()}init(){$(this.element).one("simpleedit.remove",()=>$(this.element).off("click.simpleedit.edit"))}initEvents(){$(this.element).on("click.simpleedit.edit",()=>this.enableEdit())}enableEdit(){return this.display=$(this.element).css("display"),this.node=$(this.element).prop("nodeName"),$(this.element).css("display","none"),0<$(this.element).find("span.simpleedit-empty").length?(this.text="",$(this.element).find("span.simpleedit-empty").remove()):this.text=$(this.element).text(),this.buildPattern(),$(this.element).after(this.pattern),this.pattern.find("input").select(),"ignore"!==this.onblur&&this.handleOnblur(),this}disableEdit(){if($(this.pattern).remove(),$(this.element).css("display",this.display),$(document).off("click.simpleedit.onblur"),$(document).off("keyup.simpleedit.keypress"),this.text.trim())$(this.element).text(this.text);else{$(this.element).html("<span class=\"simpleedit-empty\">Empty</span>")}return this}buildPattern(){return this.pattern=$(`<${this.node} class="simpleedit"><input type="text" value="${this.text}">${this.submitButton}${this.abortButton}</${this.node}>`),$(this.pattern).find("button.submit").on("click",()=>this.submit()),$(this.pattern).find("button.abort").on("click",()=>this.disableEdit()),$(document).on("keyup.simpleedit.keypress",a=>{("Enter"===a.key||13===a.keyCode)&&this.submit(),("Escape"===a.key||27===a.keyCode)&&this.disableEdit()}),this}handleOnblur(){return("cancel"===this.onblur||"submit"===this.onblur)&&setTimeout(()=>{$(document).on("click.simpleedit.onblur",a=>{if(!$(a.target).closest(".simpleedit").is(this.pattern))switch(this.onblur){case"cancel":this.disableEdit();break;case"submit":this.submit();}})}),this}submit(){const a=$(this.pattern).find("input").val(),b=this.url||$(this.element).attr("data-url");if(b){let c={value:a};c=Object.assign(c,this.collectAttributes());let d=Object.assign(this.ajaxOptions,{url:b,data:c,success:b=>{this.handleSuccess(a,b)},error:a=>{this.handleError(a)}});setTimeout(()=>{this.pattern.find("button.submit").replaceWith(this.spinnerButton)}),$.ajax(d)}else this.handleSuccess(a);return this}collectAttributes(){return{name:this.name||$(this.element).attr("data-name")||$(this.element).attr("id")||void 0,pk:this.pk||$(this.element).attr("data-pk")||void 0}}handleSuccess(a,b=null){if(b&&"error"===b.status)return this.handleError(b),this;for(const c in this.success&&"function"==typeof this.success&&this.success(b,a),this.text=a,this.disableEdit(),this.callbacks)this.callbacks.hasOwnProperty(c)&&this.callbacks[c](a);return this}handleError(a=null){return a&&this.error&&"function"==typeof this.error&&this.error(a),$(this.pattern).find("button.loader").replaceWith(this.submitButton),$(this.pattern).find("button.submit").on("click",()=>this.submit()),$(this.pattern).removeClass("simpleedit-error simpleedit-error-fade"),$(this.pattern).addClass("simpleedit-error"),setTimeout(()=>{$(this.pattern).removeClass("simpleedit-error").addClass("simpleedit-error-fade"),setTimeout(()=>{$(this.pattern).removeClass("simpleedit-error-fade")},1e3)},3e3),this}}function findMethod(a){for(const[b,c]of Object.entries($.fn.simpleedit.defaults.availableOptions))for(const d in c)if(c.hasOwnProperty(d)&&c[d]===a)return b;return!1}